
  

  
     
  
   

 <!-- <script src="https://cdn.socket.io/4.3.1/socket.io.min.js"></script>/ -->


          <!-- here is going to be the Project which are in the db -->
          <% if (typeof all_fault !== null && typeof all_fault !=='undefine') { %>
            <% all_fault.forEach(element => { %>
           
           
           
               <div class="mega
                box-border
              w-4/5
              p-3 bg-slate-300
              mt-6
              mb-4
              grid
              rounded-lg"
              style="grid-template-columns: 1fr 7fr;">
                
               <!-- here is for the promote fault or down grade fault  -->
                <div class="flex flex-col
                m-auto h-56 pt-3 
                border-3 border-solid border-black rounded-lg
                text-2xl
                bg-slate-300
                justify-between" id="<%=element._id%>"
                >
                    <i class="fas 
                    fa-arrow-up 
                    up
                    up_<%=element._id%>
                    bg-green-400
                    p-3
                    rounded-md
                     text-center
                     m-2
                      cursor-pointer
                       "   id="reputa_btn">
                      <%=element.Up_Count%>
                     
                    </i>

                    <i class="fas fa-
                    -down down 
                    p-3
                     bg-red-400
                     down_<%=element._id%>

                    rounded-md
                     text-center
                     m-2
                    cursor-pointer"   id="reputa_btn">
                      <%=element.down_Count%>
                    </i>
                </div>
               
              <div
               class="
                flex
                flex-col
               oneProject
                p-3
                "
                 style="grid-column-start: 2;">
              
        
                <!--  for the user info -->
         <!-- information about the user -->
     <div class="userinfo
w-full
flex
 m-0
 relative
   rounded-tr-full
   text-black
   font-serif
    ">
  <span  class="
  userprofile 
    text-xs
    flex
    w-full
    items-end
    "> 
    
   <img
    class="
    w-11
    h-11
    rounded-full
      "
   src="<% if (element.currentUser.userProfile !== ""){ %> userProfile/<%=element.currentUser.userProfile %> <% } else{%><%="/Default-Profile.png "%><% } %>"
   >
  <span class="handlename
  ">
   <a href=" /<%=element.currentUser.Userhandle%>">
    <%= element.currentUser.Userhandle %>
    </a>
    <br> 
      <small> blah blah</small>
       <%= element._tag_array%>
 </span>
  </span>
</div>
        <!-- for the tile -->
        <div class="title">
          <span
          class=" m-2 font-sans font-semibold">
         <%= element.protypeNam %>
         </span>
        </div>
        <!--  -->
         
        
    
<div id="actual_preview" class="actual-preview 
">
      <a class="single_pp" href='/question/one_now_fault/?fault_id=<%=element._id%>'> 
      
       <!-- here is the checking
         wheather it is img of vedio -->
      <% if (element.pp.split('.')[1] === "mp4") { %>
       <video src="/<%=element.pp%>/q" class="rounded-lg" controls></video>
      <% } else{%>
 <img
 class=" w-full
  rounded-lg
h-32
m-0" src="/<%=element.pp%>/q" alt="no image">
      <% } %>

</a>

<div class="some_infors  mt-1 rounded-lg m-auto
bg-gray-800 flex flex-row items-center space-x-1 justify-center">
       <div class="time_passed
        flex flex-row items-center
         text-white rounded-lg 
         w-full
         justify-between p-1 ">
 
         
<% let date_then  = new Date(element.dateCreated) %>   
<% let date_now = new Date() %>     
 <% let difference_millisec =  date_now - date_then %>     
 <% let Number_second  = Math.floor((difference_millisec)/1000) %>     
 <% let Number_minute  = Math.floor((difference_millisec)/(1000*60)) %>     
 <% let Number_hours  = Math.floor((difference_millisec)/(1000*60*60)) %>     
 <% let Number_day  = Math.floor((difference_millisec)/(1000*60*60*24)) %>     
 <% let Number_week  = Math.floor((difference_millisec)/(1000*60*60*24*7)) %>     
 <% let Number_month  = Math.floor((difference_millisec)/(1000*60*60*24*7*30)) %>     
 <% let Number_year  = Math.floor((difference_millisec)/(1000*60*60*24*7*30*365)) %>     
 <!-- making use of the  -->
 
  <% let time_passed; %>
  
<span class="time font-serif text-xl">
     <% if (Number_second <60) { %>
         <% time_passed = Number_second+" s ago"%>
         <%= time_passed %>
     <% }else if(Number_minute>0 && Number_minute <60){ %>
       <% time_passed = Number_minute+" m ago"%>
       <%= time_passed %>
        <% }else if(Number_hours>0 && Number_hours < 24){%>
       <% time_passed = Number_hours+" h ago"%>
         <%= time_passed %>
          <% }else if(Number_day>0 && Number_day <7){%>
           <% time_passed = Number_day+" day ago"%>
           <%= time_passed %>
             <% }else if(Number_week >0 && Number_week < 6){ %>
           <% time_passed = Number_week+" week ago" %>
           <%= time_passed %>
                <% }else if(Number_month>0&&Number_month <12){ %>
           <% time_passed = Number_month+" month ago"%>
            <%= time_passed %>
                  <% }else if(Number_year>0){%>
           <% time_passed = Number_year+" year ago"%>
                        <%= time_passed %>
                    <% } %>
                  </span>


                     
   <span id="like_wrapper" class="flex
    flex-row 
   w-fit  rounded-lg
   border-2 
    bg-gray-800
   border-solid
    border-red-500
   p-2
     justify-start m-auto">
     <i id='<%=element.id%>'
       class="fas fa-heart text-white
        cursor-pointer
       
         like_btn p-1
         text-sm
          ">
      <span id="Number-<%=element.id%>"
         class="text-sm">
         <%= element.Number_likes %>
      </span>
    </i>

        <!-- for the comment section  -->
       
       <i class ="
       fas fa-comment  
       text-white
       cursor-pointer
        like_btn p-1
        text-sm">
          <span id="Another_Comment<%=element.id%>" 
            class="text-sm"><%= element._Number_Comment %></span>
       </i>

   </span>
    
    <!-- here is for the number of view -->

    <span id="viewer flex flex-row">
      <i class="fas fa-eye"></i>
       <!--  the real deal -->
       <small
        class="text-2xl font-sans"><%= element._Number_View%></small> viewer
  </span>
   
   
   <!-- then you would need to output it using the  -->
  </div>



  
            <span> 
  <div class="stack-image flex
  items-center
   text-fuchsia-400
    text-2xl
          flex-row ">
   <% if (element._arraypp.length>1) { %>
    <a  href='/question/one_now_fault/?fault_id=<%=element._id%>'> 
    +<%=element._arraypp.length-1%>
     </a>
   
     <% } %>
</div>
 </span>
  </div>
           </div>

        
        
        
             </div>
           
           
            </div>
               
            <% }) %>
        <% }else{ %>
        
            <div class="bg-red-500">
               Hope
            </div>
            <% } %>
          <script>

     let reputa_btn = document.querySelectorAll("#reputa_btn");      
              //   for the socket thing 
              const socket = io("http://localhost:3000"); 

              
              //  for the vote realtime update
               socket.on("vote_from_above",(data)=>{
              // find the one
                let specific_now = data.specific.split('_')
                 console.log(specific_now[1])
                  if(specific_now[0]==="down"){
                    let one_now = document.querySelector(`.${data.specific}`)
                    one_now.innerText = data.info.down
                       
                    let one_now2 = document.querySelector(`.up_${specific_now[1]}`) 
                    one_now2.innerText =data.info.up
                   }else{ 
                    let one_now = document.querySelector(`.${data.specific}`)
                    one_now.innerText = data.info.up
                       
                    let one_now2 = document.querySelector(`.down_${specific_now[1]}`) 
                    one_now2.innerText = data.info.down
                   }
                })
              //  when we do get the someone like
               
              socket.on("someone_liked",(data)=>{
                //  get the id 
                 let pacticular =  document.getElementById(`Number-${data.like_id}`);
                  //  then setting the value in there
                    pacticular.innerText = data.number_like
              })
        
        //   updating the number of comment in the section 
         
        socket.on("Another_Comment_number",(data)=>{
           let what_taking_about = document.getElementById(`Another_Comment${data}`)
                     let number_current_comment = Number.parseInt(what_taking_about.innerText)
            what_taking_about.innerText = number_current_comment+=1
             console.log("someone commented")
                     })
        
        
              Array.prototype.forEach.call(reputa_btn,(element)=>{
                  // getting hold of each of the element which has that feature
         element.addEventListener("click",(event)=>{
                 let tageted =  event.target;
                  //  getting the parentnode id
                    let proto_id = tageted.parentNode.id;
 
                    if( tageted.classList.contains("up")){

                //  making the request to the backend
            fetch(`/question/reputation_vote/?kind=${"up"}&&proto_id=${proto_id}`).
            then(res => res.json()
            .then( gig =>{
              let info_action = {
                 specific : `up_${proto_id}`,
                  info  : gig.status_vote
              }
              socket.emit("vote_here",info_action);
            }))
               
           }
          else{
        fetch(`/question/reputation_vote/?kind=${"down"}&&proto_id=${proto_id}`).then(
          res =>{
             res.json().then(
              outcome=>{
                let info_action = {
                 specific : `down_${proto_id}`,
                  info  : outcome.status_vote
              }        
               console.log(outcome.status_vote)    
            
               socket.emit("vote_here",info_action);
            }
             )
          }
        ) 
              
                }    
              })
            })

            
               </script>